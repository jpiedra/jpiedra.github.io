<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Jonathan Piedra</title>
    <link>http://jpiedra.github.io/project/</link>
    <description>Recent content in Projects on Jonathan Piedra</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 18 Feb 2018 13:58:41 -0500</lastBuildDate><atom:link href="http://jpiedra.github.io/project/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Website Deployment Scripts</title>
      <link>http://jpiedra.github.io/project/static-site-deploy-scripts/</link>
      <pubDate>Sun, 18 Feb 2018 13:58:41 -0500</pubDate>
      
      <guid>http://jpiedra.github.io/project/static-site-deploy-scripts/</guid>
      <description>To ease the process of deploying static websites or front-end SPA&amp;rsquo;s to Amazon Web Services&#39; S3 buckets, I wrote some Powershell scripts that handle configuring a new S3 bucket to use for website hosting, as well as uploading content of various standard types (HTML, CSS, JavaScript, etc.) to the bucket afterwards. The scripts use Amazon&amp;rsquo;s Command-Line Interface.</description>
    </item>
    
    <item>
      <title>Searchable Leaderboard</title>
      <link>http://jpiedra.github.io/project/searchable-leaderboard/</link>
      <pubDate>Sun, 18 Feb 2018 13:14:22 -0500</pubDate>
      
      <guid>http://jpiedra.github.io/project/searchable-leaderboard/</guid>
      <description>I made this for fun! When I crossed launching a gaming server off of my bucket list, I decided it would be interesting to keep a leaderboard of all the players who have played on it and their logged scores to date.
The front-end is a Vue.js Single Page Application (SPA) that uses a custom Bootstrap theme for styling. The SPA consists of several Vue components that accept user input for searching and paging through logged scores, then issue the respective API calls to get the results requested by said user.</description>
    </item>
    
  </channel>
</rss>
